<Window x:Class="DataTracker.View.KeyboardScreen"
        Name="KeyboardWindowTag"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DataTracker.View"
        xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:dd="clr-namespace:GongSolutions.Wpf.DragDrop;assembly=GongSolutions.Wpf.DragDrop"
        mc:Ignorable="d"
        Title="Keyboard Builder"         
        Height="600" 
        Width="800" 
        MinHeight="400" 
        MinWidth="600" 
        BorderBrush="Black" 
        BorderThickness="1"
        ShowInTaskbar="False"
        ResizeMode="NoResize"              
        WindowStartupLocation="CenterOwner"       
        SizeToContent="WidthAndHeight">

    <Window.Resources>

        <!-- This storyboard will make the image grow to double its size in 0.2 seconds -->
        <Storyboard x:Key="expandStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX"
                             To="1.1" 
                             Duration="0:0:0.2" />
            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" 
                             To="1.1" 
                             Duration="0:0:0.2" />
        </Storyboard>

        <!-- This storyboard will make the image revert to its original size -->
        <Storyboard x:Key="shrinkStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" 
                             To="1" 
                             Duration="0:0:0.2" />
            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" 
                             To="1" 
                             Duration="0:0:0.2" />
        </Storyboard>

        <SolidColorBrush x:Key="LightGrayTextContrast">#747a79</SolidColorBrush>
        <SolidColorBrush x:Key="DarkBlackBackground">#1c2120</SolidColorBrush>
        <SolidColorBrush x:Key="DarkerBlackBackground">#111313</SolidColorBrush>

        <Style TargetType="{x:Type GridViewColumnHeader}" x:Key="MyHeaderStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                        <Border BorderThickness="0,0,0,1" BorderBrush="Transparent" Background="Transparent">
                            <TextBlock x:Name="ContentHeader" Text="{TemplateBinding Content}" Padding="5,5,5,0" Width="{TemplateBinding Width}" TextAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Width" Value="Auto" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource LightGrayTextContrast}" />
        </Style>

        <Style x:Key="GridViewColumnHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template" Value="{DynamicResource GridViewColumnHeaderControlTemplate1}"/>
        </Style>

        <ControlTemplate x:Key="GridViewColumnHeaderControlTemplate1" TargetType="{x:Type GridViewColumnHeader}">
            <Grid SnapsToDevicePixels="True">
                <Border x:Name="HeaderBorder" BorderBrush="Transparent" BorderThickness="0,1" Background="{TemplateBinding Background}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="7"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        
                        <Rectangle x:Name="UpperHighlight" Fill="#FFE3F7FF" Visibility="Collapsed"/>
                        <Border Padding="{TemplateBinding Padding}" Grid.RowSpan="2">
                            <ContentPresenter x:Name="HeaderContent" 
                                              ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Content="{TemplateBinding Content}" 
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="0,0,0,0" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </Grid>
                </Border>
                <Border x:Name="HeaderHoverBorder" BorderThickness="0,0,0,0" Margin="0,0,0,0"/>
                <Border x:Name="HeaderPressBorder" BorderThickness="0,0,0,0" Margin="0,0,0,0"/>
                <Canvas>
                    <Thumb x:Name="PART_HeaderGripper">
                        <Thumb.Style>
                            <Style TargetType="{x:Type Thumb}">
                                <Setter Property="Canvas.Right" Value="-9"/>
                                <Setter Property="Width" Value="18"/>
                                <Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                            <Border Background="Transparent">
                                                <Rectangle Fill="Transparent" HorizontalAlignment="Center" Width="0"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Thumb.Style>
                    </Thumb>
                </Canvas>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="HeaderBorder" Value="Transparent"/>
                    <Setter Property="BorderBrush" TargetName="HeaderHoverBorder" Value="#FF88CBEB"/>
                    <Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
                    <Setter Property="Background" TargetName="PART_HeaderGripper" Value="Transparent"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="HeaderBorder" Value="Transparent"/>
                    <Setter Property="BorderBrush" TargetName="HeaderHoverBorder" Value="Transparent"/>
                    <Setter Property="BorderBrush" TargetName="HeaderPressBorder" Value="Transparent"/>
                    <Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
                    <Setter Property="Fill" TargetName="UpperHighlight" Value="Transparent"/>
                    <Setter Property="Visibility" TargetName="PART_HeaderGripper" Value="Hidden"/>
                    <Setter Property="Margin" TargetName="HeaderContent" Value="0,0,0,0"/>
                </Trigger>
                <Trigger Property="Height" Value="Auto">
                    <Setter Property="MinHeight" Value="20"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="Transparent"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="BaseButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="#cccccc"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{StaticResource LightGrayTextContrast}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                </Setter.Value>
            </Setter>
            
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter Name="Presenter" Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#333333" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#dddddd" />
                                <Setter Property="BorderBrush" Value="#cccccc" />
                                <Setter Property="Foreground" Value="#333333" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#1ba1e2" />
                                <Setter Property="BorderBrush" Value="#1ba1e2"/>
                                <Setter Property="Foreground" Value="#ffffff"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter TargetName="Chrome" Property="BorderBrush" Value="#1ba1e2" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource expandStoryboard}" />
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource shrinkStoryboard}" />
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="BaseTextTitleStyle" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{StaticResource LightGrayTextContrast}"/>
            <Setter Property="FontSize" Value="2" />
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions >
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid.Background>
            <DrawingBrush Viewport="0,0,16,16" ViewportUnits="Absolute" Stretch="None" TileMode="Tile" >
                <DrawingBrush.Drawing>
                    <DrawingGroup>
                        <GeometryDrawing Brush="{StaticResource DarkerBlackBackground}">
                            <GeometryDrawing.Geometry>
                                <GeometryGroup>
                                    <RectangleGeometry Rect="0,0,8,8"/>
                                    <RectangleGeometry Rect="8,8,8,8"/>
                                </GeometryGroup>
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                        <GeometryDrawing Brush="{StaticResource DarkBlackBackground}">
                            <GeometryDrawing.Geometry>
                                <GeometryGroup>
                                    <RectangleGeometry Rect="8,0,8,8"/>
                                    <RectangleGeometry Rect="0,8,8,8"/>
                                </GeometryGroup>
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                    </DrawingGroup>
                </DrawingBrush.Drawing>
            </DrawingBrush>
        </Grid.Background>
       
        <Label x:Name="Title" Content="Key Bindings" Grid.Column="1" Grid.ColumnSpan="2" HorizontalAlignment="Center" Margin="10,10,10,10" VerticalAlignment="Center" FontSize="32" Style="{DynamicResource BaseTextTitleStyle}"/>

        <ListView Margin="10" 
                  Name="keyFrequency" 
                  Grid.Row="1" 
                  Grid.Column="0" 
                  Grid.ColumnSpan="2" 
                  Grid.RowSpan="4" 
                  dd:DragDrop.IsDragSource="True"
                  dd:DragDrop.IsDropTarget="True"
                  SelectionMode="Single"            
                  ItemsSource="{Binding FrequencyKeys}" 
                  SelectedItem="{Binding SelectedFrequencyString}" 
                  Background="Transparent"
                  HorizontalAlignment="Stretch">

            <ListView.View>
                <GridView ColumnHeaderContainerStyle="{DynamicResource GridViewColumnHeaderStyle}">
                    <GridViewColumn Header="Key (Frequency)"
                                    HeaderContainerStyle="{DynamicResource MyHeaderStyle}"
                                    Width="150" 
                                    DisplayMemberBinding="{Binding KeyName}"/>

                    <GridViewColumn Header="Description (Frequency)" 
                                    HeaderContainerStyle="{DynamicResource MyHeaderStyle}"
                                    Width="150" 
                                    DisplayMemberBinding="{Binding KeyDescription}" />

                </GridView>
            </ListView.View>
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Foreground" Value="{DynamicResource LightGrayTextContrast}" />
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>

        <ListView Margin="10" 
                  Name="keyDuration" 
                  Grid.Row="1" 
                  Grid.Column="2" 
                  Grid.ColumnSpan="2" 
                  Grid.RowSpan="4" 
                  dd:DragDrop.IsDragSource="True"
                  dd:DragDrop.IsDropTarget="True"
                  SelectionMode="Single"                  
                  ItemsSource="{Binding DurationKeys}" 
                  SelectedItem="{Binding SelectedDurationString}"
                  Background="Transparent"
                  HorizontalAlignment="Stretch" >
            
            
            <ListView.View>
                <GridView ColumnHeaderContainerStyle="{DynamicResource GridViewColumnHeaderStyle}">
                    <GridViewColumn Header="Key (Duration)" 
                                    HeaderContainerStyle="{DynamicResource MyHeaderStyle}"
                                    Width="150" 
                                    DisplayMemberBinding="{Binding KeyName}" />
                    <GridViewColumn Header="Description (Duration)" 
                                    HeaderContainerStyle="{DynamicResource MyHeaderStyle}"
                                    Width="150" 
                                    DisplayMemberBinding="{Binding KeyDescription}" />

                </GridView>
            </ListView.View>
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Foreground" Value="{DynamicResource LightGrayTextContrast}" />
                </Style>
            </ListView.ItemContainerStyle>
        </ListView>

        <Button x:Name="frequencyAdd" Content="Add Frequency Key" HorizontalAlignment="Stretch" Margin="10,20,10,20" VerticalAlignment="Stretch" Grid.Column="0" Grid.Row="5" Grid.ColumnSpan="2" Style="{DynamicResource BaseButtonStyle}" Command="{Binding FrequencyKeyCommand}"/>
        <Button x:Name="frequencyRemove" Content="Remove Frequency Key" HorizontalAlignment="Stretch" Margin="10,20,10,20" VerticalAlignment="Stretch" Grid.Column="0" Grid.Row="6" Grid.ColumnSpan="2" Style="{DynamicResource BaseButtonStyle}" Command="{Binding FrequencyKeyRemove}"/>
        
        
        <Button x:Name="durationAdd" Content="Add Duration Key" HorizontalAlignment="Stretch" Margin="10,20,10,20" VerticalAlignment="Stretch" Grid.Column="2" Grid.Row="5" Grid.ColumnSpan="2" Style="{DynamicResource BaseButtonStyle}" Command="{Binding DurationKeyCommand}"/>
        <Button x:Name="durationRemove" Content="Remove Duration Key" HorizontalAlignment="Stretch" Margin="10,20,10,20" VerticalAlignment="Stretch" Grid.Column="2" Grid.Row="6" Grid.ColumnSpan="2" Style="{DynamicResource BaseButtonStyle}" Command="{Binding DurationKeyRemove}"/>
        
        <Button x:Name="saveButton" Content="Save" HorizontalAlignment="Stretch" Margin="10,20,10,20" VerticalAlignment="Stretch" Grid.Column="1" Grid.Row="7" Grid.ColumnSpan="2" Style="{DynamicResource BaseButtonStyle}" Command="{Binding SaveCommand}"/>

    </Grid>
</Window>
