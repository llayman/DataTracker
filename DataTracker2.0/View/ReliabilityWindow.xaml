<!--
    Copyright 2016 Shawn Gilroy

    This file is part of DataTracker.

    Discounting Model Selector is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, version 3.

    DataTracker is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with DataTracker.  If not, see <http://www.gnu.org/licenses/gpl-3.0.html>.
-->
    
<Window x:Class="DataTracker.View.ReliabilityWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DataTracker"
        mc:Ignorable="d"
        Title="Reliability"         
        Height="500" 
        Width="600" 
        BorderThickness="0" 
        ResizeMode="NoResize"
        Style="{DynamicResource BackgroundStyle}"
        Loaded="Window_Loaded">

    <Window.Resources>
        <Style x:Key="HeaderStyleButton"
               TargetType="Button" 
               BasedOn="{StaticResource BaseButtonStyle}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid"
                      Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="contentPresenter"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      RecognizesAccessKey="True"
                                      Opacity="0.75" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="contentPresenter"
                                        Property="Opacity"
                                        Value="1" />
                                <Setter TargetName="grid"
                                        Property="Background"
                                        Value="Transparent" />
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                     Value="False">
                                    <Setter TargetName="contentPresenter"
                                            Property="Opacity"
                                            Value=".5" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="True">
                                <Setter TargetName="grid"
                                        Property="Background"
                                        Value="Transparent" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Visibility" Value="Hidden"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IndividualReli}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
            
        </Style>
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Gesture="Ctrl+A" Command="{Binding SelectAll}" />
        <KeyBinding Gesture="Ctrl+E" Command="{Binding UnselectAll}" />
    </Window.InputBindings>
    
    <!--
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding Initialize}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    -->

    <Grid>
        <Grid.RowDefinitions >
            <RowDefinition Height="70"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Label x:Name="Title" 
               Content="Reliability" 
               Grid.Column="0" 
               Grid.ColumnSpan="3" 
               HorizontalAlignment="Center" 
               Margin="10,10,10,10" 
               VerticalAlignment="Center" 
               FontSize="32" 
               Style="{DynamicResource BaseTextTitleStyle}"/>

        <Label x:Name="Group" 
               Content="Group" 
               Grid.Row="1"
               Grid.Column="0" 
               Grid.ColumnSpan="1" 
               HorizontalAlignment="Center" 
               Margin="10,10,10,10" 
               VerticalAlignment="Center" 
               FontSize="22"
               Style="{DynamicResource BaseTextTitleStyle}"/>

        <ComboBox x:Name="groupComboBox" 
                  Grid.Row="1" 
                  Grid.ColumnSpan="1" 
                  Grid.Column="1" 
                  HorizontalAlignment="Stretch" 
                  Margin="0,0,0,0"
                  VerticalAlignment="Center" 
                  IsReadOnly="True" 
                  IsEditable="False"
                  ItemsSource="{Binding AllGroups}"
                  SelectedItem="{Binding SelectedGroup, Mode=TwoWay}"
                  DisplayMemberPath="GroupName">
        </ComboBox>

        <Label x:Name="Individual" 
               Content="Individual" 
               Grid.Row="2"
               Grid.Column="0" 
               Grid.ColumnSpan="1" 
               HorizontalAlignment="Center" 
               Margin="10,10,10,10" 
               VerticalAlignment="Center" 
               FontSize="22"
               Style="{DynamicResource BaseTextTitleStyle}"/>

        <ComboBox x:Name="indivComboBox" 
                  Grid.Row="2" 
                  Grid.ColumnSpan="1" 
                  Grid.Column="1" 
                  HorizontalAlignment="Stretch" 
                  Margin="0,0,0,0"
                  VerticalAlignment="Center" 
                  IsReadOnly="True" 
                  IsEditable="False"
                  IsSynchronizedWithCurrentItem="True" 
                  ItemsSource="{Binding AllIndividuals}"
                  SelectedItem="{Binding SelectedIndividual, Mode=TwoWay}"
                  DisplayMemberPath="IndividualName">
        </ComboBox>

        <Label x:Name="Evaluation" 
               Content="Evaluation" 
               Grid.Row="3"
               Grid.Column="0" 
               Grid.ColumnSpan="1" 
               HorizontalAlignment="Center" 
               Margin="10,10,10,10" 
               VerticalAlignment="Center" 
               FontSize="22"
               Style="{DynamicResource BaseTextTitleStyle}"/>

        <ComboBox x:Name="evaluationComboBox" 
                  Grid.Row="3" 
                  Grid.ColumnSpan="1" 
                  Grid.Column="1" 
                  HorizontalAlignment="Stretch" 
                  Margin="0,0,0,0"
                  VerticalAlignment="Center" 
                  IsSynchronizedWithCurrentItem="True" 
                  ItemsSource="{Binding AllEvaluations}"
                  SelectedItem="{Binding SelectedEvaluation, Mode=TwoWay}"
                  DisplayMemberPath="EvaluationName">
        </ComboBox>

        <ListBox x:Name="reliListBox"
                 Grid.Row="4" 
                 Grid.RowSpan="3"
                 Grid.Column="0" 
                 Grid.ColumnSpan="3" 
                 HorizontalAlignment="Stretch" 
                 ItemsSource="{Binding AllReliabilityIndices, Mode=TwoWay}"
                 Margin="25,0,25,0"
                 MaxHeight="300"
                 VerticalAlignment="Stretch"
                 SelectionMode="Multiple"
                 DisplayMemberPath="TitleName">
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>
        
        <Button x:Name="buttonReliability" 
                Content="Run Reliability" 
                HorizontalAlignment="Stretch" 
                Margin="10,20,10,10" 
                VerticalAlignment="Stretch" 
                Grid.Column="1" 
                Grid.Row="7" 
                Grid.ColumnSpan="1" 
                Command="{Binding RunReliabilityCommand}"
                Style="{DynamicResource BaseButtonStyle}"/>
    </Grid>
</Window>
