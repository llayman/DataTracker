<Window x:Class="DataTracker.View.ReliabilityWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DataTracker.View"
        xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"                     
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"                      
        mc:Ignorable="d"
        Title="Reliability"         
        Height="500" 
        Width="600" 
        MinHeight="400" 
        MinWidth="600"
        BorderThickness="0" 
        ResizeMode="NoResize"
        SizeToContent="WidthAndHeight">

    <Window.Resources>
        <SolidColorBrush x:Key="LightGrayTextContrast">#747a79</SolidColorBrush>
        <SolidColorBrush x:Key="DarkBlackBackground">#1c2120</SolidColorBrush>
        <SolidColorBrush x:Key="DarkerBlackBackground">#111313</SolidColorBrush>

        <Storyboard x:Key="expandStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX"
                             To="1.1" 
                             Duration="0:0:0.2" />
            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" 
                             To="1.1" 
                             Duration="0:0:0.2" />
        </Storyboard>

        <Storyboard x:Key="shrinkStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" 
                             To="1" 
                             Duration="0:0:0.2" />
            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" 
                             To="1" 
                             Duration="0:0:0.2" />
        </Storyboard>

        <Style x:Key="HeaderStyleButton"
               TargetType="Button" 
               BasedOn="{StaticResource BaseButtonStyle}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="grid"
                      Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="contentPresenter"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      RecognizesAccessKey="True"
                                      Opacity="0.75" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="contentPresenter"
                                        Property="Opacity"
                                        Value="1" />
                                <Setter TargetName="grid"
                                        Property="Background"
                                        Value="Transparent" />
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                     Value="False">
                                    <Setter TargetName="contentPresenter"
                                            Property="Opacity"
                                            Value=".5" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="True">
                                <Setter TargetName="grid"
                                        Property="Background"
                                        Value="Transparent" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Visibility" Value="Hidden"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IndividualReli}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
            
        </Style>

        <Style TargetType="{x:Type GridViewColumnHeader}" x:Key="MyHeaderStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                        <Border BorderThickness="0,0,0,1" BorderBrush="Transparent" Background="Transparent">
                            <TextBlock x:Name="ContentHeader" Text="{TemplateBinding Content}" Padding="5,5,5,0" Width="{TemplateBinding Width}" TextAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Width" Value="Auto" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource LightGrayTextContrast}" />
        </Style>

        <Style x:Key="BaseButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="#cccccc"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{StaticResource LightGrayTextContrast}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter Name="Presenter" Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#333333" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#dddddd" />
                                <Setter Property="BorderBrush" Value="#cccccc" />
                                <Setter Property="Foreground" Value="#333333" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#1ba1e2" />
                                <Setter Property="BorderBrush" Value="#1ba1e2"/>
                                <Setter Property="Foreground" Value="#ffffff"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter TargetName="Chrome" Property="BorderBrush" Value="#1ba1e2" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource expandStoryboard}" />
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource shrinkStoryboard}" />
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="BaseTextTitleStyle" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{StaticResource LightGrayTextContrast}"/>
            <Setter Property="FontSize" Value="22" />
        </Style>

    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Gesture="Ctrl+A" Command="{Binding SelectAll}" />
        <KeyBinding Gesture="Ctrl+E" Command="{Binding UnselectAll}" />
    </Window.InputBindings>
    
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding Initialize}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.Background>
            <DrawingBrush Viewport="0,0,16,16" ViewportUnits="Absolute" Stretch="None" TileMode="Tile" >
                <DrawingBrush.Drawing>
                    <DrawingGroup>
                        <GeometryDrawing Brush="{DynamicResource DarkerBlackBackground}">
                            <GeometryDrawing.Geometry>
                                <GeometryGroup>
                                    <RectangleGeometry Rect="0,0,8,8"/>
                                    <RectangleGeometry Rect="8,8,8,8"/>
                                </GeometryGroup>
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                        <GeometryDrawing Brush="{DynamicResource DarkBlackBackground}">
                            <GeometryDrawing.Geometry>
                                <GeometryGroup>
                                    <RectangleGeometry Rect="8,0,8,8"/>
                                    <RectangleGeometry Rect="0,8,8,8"/>
                                </GeometryGroup>
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                    </DrawingGroup>
                </DrawingBrush.Drawing>
            </DrawingBrush>
        </Grid.Background>

        <Grid.RowDefinitions >
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Label x:Name="Title" 
               Content="Reliability" 
               Grid.Column="0" 
               Grid.ColumnSpan="3" 
               HorizontalAlignment="Center" 
               Margin="10,10,10,10" 
               VerticalAlignment="Center" 
               FontSize="32" 
               Style="{DynamicResource BaseTextTitleStyle}"/>

        <Label x:Name="Group" 
               Content="Group" 
               Grid.Row="1"
               Grid.Column="0" 
               Grid.ColumnSpan="1" 
               HorizontalAlignment="Center" 
               Margin="10,10,10,10" 
               VerticalAlignment="Center" 
               Style="{DynamicResource BaseTextTitleStyle}"/>

        <ComboBox x:Name="groupComboBox" 
                  Grid.Row="1" 
                  Grid.ColumnSpan="1" 
                  Grid.Column="1" 
                  HorizontalAlignment="Stretch" 
                  Margin="0,0,0,0"
                  VerticalAlignment="Center" 
                  IsReadOnly="True" 
                  IsEditable="False"
                  ItemsSource="{Binding AllGroups}"
                  SelectedItem="{Binding SelectedGroup, Mode=TwoWay}"
                  DisplayMemberPath="GroupName">
        </ComboBox>

        <Label x:Name="Individual" 
               Content="Individual" 
               Grid.Row="2"
               Grid.Column="0" 
               Grid.ColumnSpan="1" 
               HorizontalAlignment="Center" 
               Margin="10,10,10,10" 
               VerticalAlignment="Center" 
               Style="{DynamicResource BaseTextTitleStyle}"/>

        <ComboBox x:Name="indivComboBox" 
                  Grid.Row="2" 
                  Grid.ColumnSpan="1" 
                  Grid.Column="1" 
                  HorizontalAlignment="Stretch" 
                  Margin="0,0,0,0"
                  VerticalAlignment="Center" 
                  IsReadOnly="True" 
                  IsEditable="False"
                  IsSynchronizedWithCurrentItem="True" 
                  ItemsSource="{Binding AllIndividuals}"
                  SelectedItem="{Binding SelectedIndividual, Mode=TwoWay}"
                  DisplayMemberPath="IndividualName">
        </ComboBox>

        <Label x:Name="Evaluation" 
               Content="Evaluation" 
               Grid.Row="3"
               Grid.Column="0" 
               Grid.ColumnSpan="1" 
               HorizontalAlignment="Center" 
               Margin="10,10,10,10" 
               VerticalAlignment="Center" 
               Style="{DynamicResource BaseTextTitleStyle}"/>

        <ComboBox x:Name="evaluationComboBox" 
                  Grid.Row="3" 
                  Grid.ColumnSpan="1" 
                  Grid.Column="1" 
                  HorizontalAlignment="Stretch" 
                  Margin="0,0,0,0"
                  VerticalAlignment="Center" 
                  IsSynchronizedWithCurrentItem="True" 
                  ItemsSource="{Binding AllEvaluations}"
                  SelectedItem="{Binding SelectedEvaluation, Mode=TwoWay}"
                  DisplayMemberPath="EvaluationName">
        </ComboBox>

        <ListBox x:Name="reliListBox"
                 Grid.Row="4" 
                 Grid.RowSpan="3"
                 Grid.Column="0" 
                 Grid.ColumnSpan="3" 
                 HorizontalAlignment="Stretch" 
                 ItemsSource="{Binding AllReliabilityIndices, Mode=TwoWay}"
                 Margin="25,0,25,0"
                 MaxHeight="300"
                 VerticalAlignment="Stretch"
                 SelectionMode="Multiple"
                 DisplayMemberPath="TitleName">
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <!-- "IsSelected" isn't, IntelliSense is showing the members of the Window's ViewModel -->
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>
        
        <Button x:Name="buttonReliability" 
                Content="Run Reliability" 
                HorizontalAlignment="Stretch" 
                Margin="10,20,10,20" 
                VerticalAlignment="Stretch" 
                Grid.Column="1" 
                Grid.Row="7" 
                Grid.ColumnSpan="1" 
                Command="{Binding RunReliabilityCommand}"
                Style="{DynamicResource BaseButtonStyle}"/>

    </Grid>
</Window>
