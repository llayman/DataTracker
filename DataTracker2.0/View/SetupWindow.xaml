<!--
    Copyright 2016 Shawn Gilroy

    This file is part of DataTracker.

    Discounting Model Selector is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, version 3.

    DataTracker is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with DataTracker.  If not, see <http://www.gnu.org/licenses/gpl-3.0.html>.
-->

<Window x:Class="DataTracker.View.SetupWindow"
        Name="SetupWindowTag"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DataTracker.View"
        mc:Ignorable="d"
        Title="SetupWindow" 
        Height="750" 
        Width="850" 
        ResizeMode="NoResize"
        BorderThickness="0"
        Style="{DynamicResource BackgroundStyle}">

    <Window.Resources>
        <Thickness x:Key="MarginResource" Left="10"  Top="0" Right="10" Bottom="0" />
        <Thickness x:Key="MarginResourceButton" Left="10"  Top="5" Right="10" Bottom="5" />
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions >
            <RowDefinition Height="80"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Label x:Name="Title" 
               Content="Session Designer" 
               Grid.Column="0" 
               Grid.ColumnSpan="5" 
               HorizontalAlignment="Center" 
               Margin="10,10,10,10" 
               VerticalAlignment="Center" 
               FontSize="32" 
               Style="{DynamicResource BaseTextTitleStyle}"/>

        <Label x:Name="subTitle" 
               Content="Selected Keyset" 
               Grid.Column="3" 
               Grid.Row="1"
               Grid.ColumnSpan="2" 
               HorizontalAlignment="Center" 
               Margin="10,10,10,10" 
               VerticalAlignment="Center" 
               FontSize="16" 
               Style="{DynamicResource BaseTextTitleStyle}"/>

        <Label x:Name="labelGroup" 
               Content="Select Group" 
               Foreground="{StaticResource LightGrayTextContrast}"
               Grid.Row="1" 
               Grid.Column="0" 
               HorizontalAlignment="Stretch" 
               Margin="{StaticResource MarginResource}"
               VerticalAlignment="Center"/>

        <ComboBox x:Name="groupComboBox" 
                  Grid.Row="1" 
                  Grid.ColumnSpan="1" 
                  Grid.Column="1" 
                  HorizontalAlignment="Stretch" 
                  Margin="{StaticResource MarginResource}"
                  VerticalAlignment="Center" 
                  IsReadOnly="True" 
                  IsEditable="False"
                  DataContext="{Binding groupListViewModel}"
                  ItemsSource="{Binding AllGroups}"
                  SelectedValue="{Binding GroupSelection}"
                  IsSynchronizedWithCurrentItem="True"
                  DisplayMemberPath="GroupName">

        </ComboBox>

        <Button x:Name="buttonGroup" 
                Content="New Group" 
                Margin="{StaticResource MarginResourceButton}"
                Grid.Column="2" 
                Grid.Row="1" 
                KeyboardNavigation.TabNavigation="None" 
                Grid.ColumnSpan="1" 
                Command="{Binding AddGroupWindow}" 
                Style="{DynamicResource BaseButtonStyle}"/>

        <Label x:Name="labelIndividual" 
               Content="Select Individual" 
               Grid.Row="2" 
               Grid.Column="0" 
               HorizontalAlignment="Stretch" 
               Foreground="{StaticResource LightGrayTextContrast}"
               Margin="{StaticResource MarginResource}"
               VerticalAlignment="Center"/>
        
        <ComboBox x:Name="indivComboBox" 
                  Grid.Row="2" 
                  Grid.ColumnSpan="1" 
                  Grid.Column="1" 
                  HorizontalAlignment="Stretch" 
                  Margin="{StaticResource MarginResource}"
                  VerticalAlignment="Center" 
                  IsReadOnly="True" 
                  IsEditable="False" 
                  DataContext="{Binding individualListViewModel}"
                  ItemsSource="{Binding AllIndividuals}"
                  SelectedValue="{Binding IndividualSelection}"
                  IsSynchronizedWithCurrentItem="True"
                  DisplayMemberPath="IndividualName"/>

        <Button x:Name="buttonIndividual" 
                Content="New Individual" 
                Command="{Binding AddIndividualWindow}" 
                Margin="{StaticResource MarginResourceButton}"
                KeyboardNavigation.TabNavigation="None" 
                Grid.Column="2" 
                Grid.Row="2" 
                Grid.ColumnSpan="1" 
                Style="{DynamicResource BaseButtonStyle}"/>

        <Label x:Name="labelEvaluation" 
               Content="Select Evaluation" 
               Grid.Row="3" 
               Grid.Column="0" 
               HorizontalAlignment="Stretch" 
               Foreground="{StaticResource LightGrayTextContrast}"
               Margin="{StaticResource MarginResource}"
               VerticalAlignment="Center"/>
        
        <ComboBox x:Name="evaluationComboBox" 
                  Grid.Row="3" 
                  Grid.ColumnSpan="1" 
                  Grid.Column="1" 
                  HorizontalAlignment="Stretch" 
                  Margin="{StaticResource MarginResource}"
                  VerticalAlignment="Center" 
                  IsReadOnly="True" 
                  IsEditable="False"
                  DataContext="{Binding evaluationListViewModel}"
                  ItemsSource="{Binding AllEvaluations}"
                  SelectedValue="{Binding EvaluationSelection}"
                  IsSynchronizedWithCurrentItem="True"
                  DisplayMemberPath="EvaluationName"/>
        
        <Button x:Name="buttonEvaluation" 
                Content="New Evaluation" 
                Command="{Binding AddEvaluationWindow}" 
                Margin="{StaticResource MarginResourceButton}"
                KeyboardNavigation.TabNavigation="None" 
                Grid.Column="2" 
                Grid.Row="3" 
                Grid.ColumnSpan="1" 
                Style="{DynamicResource BaseButtonStyle}"/>

        <Label x:Name="labelCondition" 
               Content="Select Condition" 
               Grid.Row="4" 
               Grid.Column="0" 
               HorizontalAlignment="Stretch" 
               Foreground="{StaticResource LightGrayTextContrast}"
               Margin="{StaticResource MarginResource}"
               VerticalAlignment="Center"/>
        
        <ComboBox x:Name="conditionComboBox" 
                  Grid.Row="4" 
                  Grid.ColumnSpan="1" 
                  Grid.Column="1" 
                  HorizontalAlignment="Stretch" 
                  Margin="{StaticResource MarginResource}"
                  VerticalAlignment="Center" 
                  IsReadOnly="True" 
                  IsEditable="False" 
                  DataContext="{Binding conditionListViewModel}"
                  ItemsSource="{Binding AllConditions}"
                  SelectedValue="{Binding ConditionSelection}"
                  IsSynchronizedWithCurrentItem="True"
                  DisplayMemberPath="ConditionName"/>
        
        <Button x:Name="buttonCondition" 
                Content="New Condition" 
                Command="{Binding AddConditionWindow}" 
                Margin="{StaticResource MarginResourceButton}"
                KeyboardNavigation.TabNavigation="None" 
                Grid.Column="2" 
                Grid.Row="4" 
                Grid.ColumnSpan="1" 
                Style="{DynamicResource BaseButtonStyle}"/>

        <Label x:Name="labelKeyset" 
               Content="Select Key Set" 
               Grid.Row="5" 
               Grid.Column="0" 
               HorizontalAlignment="Stretch" 
               Foreground="{StaticResource LightGrayTextContrast}"
               Margin="{StaticResource MarginResource}"
               VerticalAlignment="Center"/>

        <ComboBox x:Name="keysetComboBox" 
                  Grid.Row="5" 
                  Grid.ColumnSpan="1" 
                  Grid.Column="1" 
                  HorizontalAlignment="Stretch" 
                  Margin="{StaticResource MarginResource}"
                  VerticalAlignment="Center" 
                  IsReadOnly="True" 
                  IsEditable="False"
                  DataContext="{Binding keyboardListViewModel}"
                  ItemsSource="{Binding Path=AllKeyboards}"
                  SelectedValue="{Binding keyboardSelection}"
                  IsSynchronizedWithCurrentItem="True"
                  DisplayMemberPath="name"/>

        <Button x:Name="buttonKeyset" 
                Content="Add/Edit Key Set"
                Margin="{StaticResource MarginResourceButton}"
                KeyboardNavigation.TabNavigation="None" 
                Grid.Column="2" 
                Grid.Row="5" 
                Grid.ColumnSpan="1"
                Style="{DynamicResource BaseButtonStyle}"
                Command="{Binding AddKeyboardWindow}" />

        <Label x:Name="labelTherapist" 
               Content="Therapist" 
               Grid.Row="6" 
               Grid.Column="0" 
               Foreground="{StaticResource LightGrayTextContrast}"
               HorizontalAlignment="Stretch" 
               Margin="{StaticResource MarginResource}"
               VerticalAlignment="Center"/>
        
        <ComboBox x:Name="therapistComboBox" 
                  Grid.Row="6" 
                  Grid.ColumnSpan="1" 
                  Grid.Column="1" 
                  HorizontalAlignment="Stretch" 
                  Margin="{StaticResource MarginResource}"
                  VerticalAlignment="Center" 
                  IsReadOnly="True" 
                  IsEditable="False" 
                  DataContext="{Binding therapistListViewModel}"
                  ItemsSource="{Binding AllTherapists}"
                  SelectedValue="{Binding TherapistSelection}"
                  SelectedValuePath="TherapistsName"
                  DisplayMemberPath="TherapistsName"/>
        
        <Button x:Name="buttonTherapist" 
                Content="New Therapist" 
                Margin="{StaticResource MarginResourceButton}"
                KeyboardNavigation.TabNavigation="None" 
                Grid.Column="2"
                Grid.Row="6" 
                Grid.ColumnSpan="1" 
                Command="{Binding AddTherapistWindow}"
                Style="{DynamicResource BaseButtonStyle}"/>

        <Label x:Name="labelCollector" 
               Content="Data Collector" 
               Grid.Row="7" 
               Grid.Column="0" 
               HorizontalAlignment="Stretch" 
               Foreground="{StaticResource LightGrayTextContrast}"
               Margin="{StaticResource MarginResource}"
               VerticalAlignment="Center"/>

        <ComboBox x:Name="collectorComboBox" 
                  Grid.Row="7" 
                  Grid.ColumnSpan="1" 
                  Grid.Column="1" 
                  HorizontalAlignment="Stretch" 
                  Margin="{StaticResource MarginResource}"
                  VerticalAlignment="Center" 
                  IsReadOnly="True" 
                  IsEditable="False"
                  DataContext="{Binding collectorListViewModel}"
                  ItemsSource="{Binding AllCollectors}"
                  SelectedValue="{Binding CollectorSelection}"
                  IsSynchronizedWithCurrentItem="True"
                  SelectedValuePath="CollectorsName"
                  DisplayMemberPath="CollectorsName"/>

        <Button x:Name="buttonCollector" 
                Content="New Collector"
                Margin="{StaticResource MarginResourceButton}"
                KeyboardNavigation.TabNavigation="None" 
                Grid.Column="2"
                Grid.Row="7" 
                Grid.ColumnSpan="1" 
                Command="{Binding AddCollectorWindow}"
                Style="{DynamicResource BaseButtonStyle}"/>

        <ListView Name="keyFrequency" 
                  Margin="10" 
                  Grid.Row="2" 
                  Grid.Column="3" 
                  Grid.ColumnSpan="2" 
                  Grid.RowSpan="3" 
                  Background="Transparent"
                  HorizontalAlignment="Stretch"
                  KeyboardNavigation.TabNavigation="None"  
                  Foreground="{DynamicResource LightGrayTextContrast}"
                  ItemsSource="{Binding FrequencyKeys}" 
                  SelectedItem="{Binding SelectedFrequencyString}" >
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Border
                         BorderBrush="Transparent"
                         BorderThickness="0"
                         Background="{TemplateBinding Background}">
                                    <GridViewRowPresenter HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="Auto" Margin="0" Content="{TemplateBinding Content}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.View>
                <GridView ColumnHeaderContainerStyle="{DynamicResource GridViewColumnHeaderStyle}"
                          AllowsColumnReorder="False">
                    <GridViewColumn Header="Key (Frequency)"
                                    HeaderContainerStyle="{DynamicResource MyHeaderStyle}"
                                    Width="150" 
                                    DisplayMemberBinding="{Binding KeyName}"/>

                    <GridViewColumn Header="Description (Frequency)" 
                                    HeaderContainerStyle="{DynamicResource MyHeaderStyle}"
                                    Width="150" 
                                    DisplayMemberBinding="{Binding KeyDescription}" />

                </GridView>
            </ListView.View>
        </ListView>

        <ListView Name="keyDuration"
                  Margin="10" 
                  Grid.Row="5" 
                  Grid.Column="3" 
                  Grid.ColumnSpan="2" 
                  Grid.RowSpan="3" 
                  Background="Transparent"
                  KeyboardNavigation.TabNavigation="None"  
                  Foreground="{DynamicResource LightGrayTextContrast}"
                  ItemsSource="{Binding DurationKeys}" 
                  SelectedItem="{Binding SelectedDurationString}">
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Border
                         BorderBrush="Transparent"
                         BorderThickness="0"
                         Background="{TemplateBinding Background}">
                                    <GridViewRowPresenter HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="Auto" Margin="0" Content="{TemplateBinding Content}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.View>
                <GridView ColumnHeaderContainerStyle="{DynamicResource GridViewColumnHeaderStyle}"
                          AllowsColumnReorder="False">
                    <GridViewColumn Header="Key (Duration)" 
                                    HeaderContainerStyle="{DynamicResource MyHeaderStyle}"
                                    Width="150" 
                                    DisplayMemberBinding="{Binding KeyName}" />
                    <GridViewColumn Header="Description (Duration)" 
                                    HeaderContainerStyle="{DynamicResource MyHeaderStyle}"
                                    Width="150" 
                                    DisplayMemberBinding="{Binding KeyDescription}" />

                </GridView>
            </ListView.View>
        </ListView>

        <Label x:Name="labelReliability" 
               Content="Collector Role" 
               Grid.Row="8" 
               Grid.Column="0" 
               HorizontalAlignment="Stretch" 
               Foreground="{StaticResource LightGrayTextContrast}"
               Margin="{StaticResource MarginResource}"
               VerticalAlignment="Center"/>

        <ComboBox x:Name="collectorRole" 
                  Grid.Row="8" 
                  Grid.ColumnSpan="1" 
                  Grid.Column="1" 
                  HorizontalAlignment="Stretch" 
                  Margin="{StaticResource MarginResource}"
                  VerticalAlignment="Center" 
                  IsReadOnly="True" 
                  SelectedValuePath="Content"
                  SelectedValue="{Binding SelectedDataRole}"
                  IsEditable="False"
                  IsSynchronizedWithCurrentItem="True">
            <ComboBoxItem>Primary</ComboBoxItem>
            <ComboBoxItem>Reliability</ComboBoxItem>
            
        </ComboBox>

        <Label x:Name="labelDuration" 
               Content="Session Duration" 
               Grid.Row="9" 
               Grid.Column="0" 
               HorizontalAlignment="Stretch" 
               Foreground="{StaticResource LightGrayTextContrast}"
               Margin="{StaticResource MarginResource}"
               VerticalAlignment="Center"/>

        <ComboBox x:Name="sessionDuration" 
                  Grid.Row="9" 
                  Grid.ColumnSpan="1" 
                  Grid.Column="1" 
                  HorizontalAlignment="Stretch" 
                  Margin="{StaticResource MarginResource}"
                  VerticalAlignment="Center" 
                  IsReadOnly="True" 
                  SelectedValuePath="Content"
                  SelectedValue="{Binding SelectedTime}"
                  IsEditable="False">
            <ComboBoxItem>1 Minute</ComboBoxItem>
            <ComboBoxItem>5 Minutes</ComboBoxItem>
            <ComboBoxItem>10 Minutes</ComboBoxItem>
            <ComboBoxItem>15 Minutes</ComboBoxItem>
            <ComboBoxItem>20 Minutes</ComboBoxItem>
            <ComboBoxItem>25 Minutes</ComboBoxItem>
            <ComboBoxItem>30 Minutes</ComboBoxItem>
            <ComboBoxItem>60 Minutes</ComboBoxItem>
        </ComboBox>

        <Label x:Name="labelSessionNumber" 
               Content="Session Number" 
               Grid.Row="10" 
               Grid.Column="0" 
               HorizontalAlignment="Stretch" 
               Foreground="{DynamicResource LightGrayTextContrast}"
               Margin="{DynamicResource MarginResource}"
               VerticalAlignment="Center"/>

        <TextBox x:Name="textBoxSession"
                 Grid.Row="10"
                 Grid.Column="1"
                 HorizontalAlignment="Stretch"
                 Margin="10,15,10,15"
                 HorizontalContentAlignment="Left"
                 VerticalContentAlignment="Center">
            <TextBox.Text>
                <Binding Path="SessionNumber">
                    <Binding.ValidationRules>
                        <ExceptionValidationRule/>
                        <local:SessionValidation/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
            
        </TextBox>

        <DockPanel 
            Grid.Row="8"
            Grid.RowSpan="3"
            Grid.Column="2"
            Background="Transparent"
            Grid.ColumnSpan="3"
            Margin="10,10,10,10">
            <Border CornerRadius="1"
                BorderBrush="{DynamicResource LightGrayTextContrast}"
                BorderThickness="1"
                Padding="10">
                <Grid>
                    <Grid.RowDefinitions >
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Label
                        Grid.Row="0"
                        Grid.Column="0"
                        Grid.ColumnSpan="3"
                        Foreground="{DynamicResource LightGrayTextContrast}"
                        Content="Directions for Use"
                        HorizontalContentAlignment="Center"/>

                    <Label
                        Grid.Row="1"
                        Grid.Column="0"
                        Foreground="{DynamicResource LightGrayTextContrast}"
                        Grid.ColumnSpan="3"
                        Content="Step 1: Select the group and individual being observed."/>

                    <Label
                        Grid.Row="2"
                        Grid.Column="0"
                        Grid.ColumnSpan="3"
                        Foreground="{DynamicResource LightGrayTextContrast}"
                        Content="Step 2: Select the specific treatment and conditions being measured."/>

                    <Label
                        Grid.Row="3"
                        Grid.Column="0"
                        Grid.ColumnSpan="3"
                        Foreground="{DynamicResource LightGrayTextContrast}"
                        Content="Step 3: Indicate the therapist(s) and current data collector(s) for this session."/>

                    <Label
                        Grid.Row="4"
                        Grid.Column="0"
                        Foreground="{DynamicResource LightGrayTextContrast}"
                        Grid.ColumnSpan="3"
                        Content="Step 4: Set the session duration/session number and press the Start Session button."/>
                </Grid>
            </Border>
        </DockPanel>
        
        <Button x:Name="buttonClose" 
                Content="Back" 
                Margin="{StaticResource MarginResourceButton}"
                Grid.Column="0"
                Grid.Row="11" 
                Grid.ColumnSpan="2" 
                Style="{DynamicResource BaseButtonStyle}" 
                Command="{Binding CloseSetupWindow}"/>
        
        <Button x:Name="buttonStart" 
                Content="Start Session"
                Margin="{StaticResource MarginResourceButton}"
                Grid.Column="3" 
                Grid.Row="11" 
                Grid.ColumnSpan="2" 
                Style="{DynamicResource BaseButtonStyle}" 
                Command="{Binding SetupWindowFired}"/>
    </Grid>
</Window>
