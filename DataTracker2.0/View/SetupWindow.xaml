<Window x:Class="DataTracker.View.SetupWindow"
        Name="SetupWindowTag"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DataTracker.View"
        xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
        mc:Ignorable="d"
        Title="SetupWindow" 
        Height="750" 
        Width="850" 
        MinHeight="750" 
        MinWidth="750" 
        ResizeMode="NoResize"
        BorderThickness="0" 
        SizeToContent="WidthAndHeight">

    <Window.Resources>
        <!-- This storyboard will make the image grow to double its size in 0.2 seconds -->
        <Storyboard x:Key="expandStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX"
                             To="1.1" 
                             Duration="0:0:0.2" />
            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" 
                             To="1.1" 
                             Duration="0:0:0.2" />
        </Storyboard>

        <!-- This storyboard will make the image revert to its original size -->
        <Storyboard x:Key="shrinkStoryboard">
            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleX" 
                             To="1" 
                             Duration="0:0:0.2" />
            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.ScaleY" 
                             To="1" 
                             Duration="0:0:0.2" />
        </Storyboard>

        <SolidColorBrush x:Key="LightGrayTextContrast">#747a79</SolidColorBrush>
        <SolidColorBrush x:Key="DarkBlackBackground">#1c2120</SolidColorBrush>
        <SolidColorBrush x:Key="DarkerBlackBackground">#111313</SolidColorBrush>

        <Thickness x:Key="MarginResource" Left="10"  Top="0" Right="10" Bottom="0" />
        <Thickness x:Key="MarginResourceButton" Left="10"  Top="5" Right="10" Bottom="5" />

        <Style TargetType="{x:Type GridViewColumnHeader}" x:Key="MyHeaderStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                        <Border BorderThickness="0,0,0,1" BorderBrush="Transparent" Background="Transparent">
                            <TextBlock x:Name="ContentHeader" Text="{TemplateBinding Content}" Padding="5,5,5,0" Width="{TemplateBinding Width}" TextAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Width" Value="Auto" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource LightGrayTextContrast}" />
        </Style>

        <Style x:Key="GridViewColumnHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template" Value="{DynamicResource GridViewColumnHeaderControlTemplate1}"/>
        </Style>

        <ControlTemplate x:Key="GridViewColumnHeaderControlTemplate1" TargetType="{x:Type GridViewColumnHeader}">
            <Grid SnapsToDevicePixels="True">
                <Border x:Name="HeaderBorder" BorderBrush="Transparent" BorderThickness="0,1" Background="{TemplateBinding Background}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="7"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Rectangle x:Name="UpperHighlight" Fill="#FFE3F7FF" Visibility="Collapsed"/>
                        <Border Padding="{TemplateBinding Padding}" Grid.RowSpan="2">
                            <ContentPresenter x:Name="HeaderContent" 
                                              ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Content="{TemplateBinding Content}" 
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="0,0,0,0" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </Grid>
                </Border>
                <Border x:Name="HeaderHoverBorder" BorderThickness="0,0,0,0" Margin="0,0,0,0"/>
                <Border x:Name="HeaderPressBorder" BorderThickness="0,0,0,0" Margin="0,0,0,0"/>
                <Canvas>
                    <Thumb x:Name="PART_HeaderGripper">
                        <Thumb.Style>
                            <Style TargetType="{x:Type Thumb}">
                                <Setter Property="Canvas.Right" Value="-9"/>
                                <Setter Property="Width" Value="18"/>
                                <Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                            <Border Background="Transparent">
                                                <Rectangle Fill="Transparent" HorizontalAlignment="Center" Width="0"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Thumb.Style>
                    </Thumb>
                </Canvas>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="HeaderBorder" Value="Transparent"/>
                    <Setter Property="BorderBrush" TargetName="HeaderHoverBorder" Value="#FF88CBEB"/>
                    <Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
                    <Setter Property="Background" TargetName="PART_HeaderGripper" Value="Transparent"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="HeaderBorder" Value="Transparent"/>
                    <Setter Property="BorderBrush" TargetName="HeaderHoverBorder" Value="Transparent"/>
                    <Setter Property="BorderBrush" TargetName="HeaderPressBorder" Value="Transparent"/>
                    <Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
                    <Setter Property="Fill" TargetName="UpperHighlight" Value="Transparent"/>
                    <Setter Property="Visibility" TargetName="PART_HeaderGripper" Value="Hidden"/>
                    <Setter Property="Margin" TargetName="HeaderContent" Value="0,0,0,0"/>
                </Trigger>
                <Trigger Property="Height" Value="Auto">
                    <Setter Property="MinHeight" Value="20"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="Transparent"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="BaseButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="#cccccc"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{StaticResource LightGrayTextContrast}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="RenderTransformOrigin" Value="0.5, 0.5" />
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Name="Chrome"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter Name="Presenter" Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#333333" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#dddddd" />
                                <Setter Property="BorderBrush" Value="#cccccc" />
                                <Setter Property="Foreground" Value="#333333" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#1ba1e2" />
                                <Setter Property="BorderBrush" Value="#1ba1e2"/>
                                <Setter Property="Foreground" Value="#ffffff"/>
                            </Trigger>
                            <Trigger Property="IsFocused" Value="true">
                                <Setter TargetName="Chrome" Property="BorderBrush" Value="#1ba1e2" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard Storyboard="{StaticResource expandStoryboard}" />
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard Storyboard="{StaticResource shrinkStoryboard}" />
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="BaseTextTitleStyle" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{StaticResource LightGrayTextContrast}"/>
            <Setter Property="FontSize" Value="22" />
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.Background>
            <DrawingBrush Viewport="0,0,16,16" ViewportUnits="Absolute" Stretch="None" TileMode="Tile" >
                <DrawingBrush.Drawing>
                    <DrawingGroup>
                        <GeometryDrawing Brush="{DynamicResource DarkerBlackBackground}">
                            <GeometryDrawing.Geometry>
                                <GeometryGroup>
                                    <RectangleGeometry Rect="0,0,8,8"/>
                                    <RectangleGeometry Rect="8,8,8,8"/>
                                </GeometryGroup>
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                        <GeometryDrawing Brush="{DynamicResource DarkBlackBackground}">
                            <GeometryDrawing.Geometry>
                                <GeometryGroup>
                                    <RectangleGeometry Rect="8,0,8,8"/>
                                    <RectangleGeometry Rect="0,8,8,8"/>
                                </GeometryGroup>
                            </GeometryDrawing.Geometry>
                        </GeometryDrawing>
                    </DrawingGroup>
                </DrawingBrush.Drawing>
            </DrawingBrush>
        </Grid.Background>

        <Grid.RowDefinitions >
            <RowDefinition Height="80"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Label x:Name="Title" 
               Content="Session Designer" 
               Grid.Column="0" 
               Grid.ColumnSpan="5" 
               HorizontalAlignment="Center" 
               Margin="10,10,10,10" 
               VerticalAlignment="Center" 
               FontSize="32" 
               Style="{DynamicResource BaseTextTitleStyle}"/>

        <Label x:Name="subTitle" 
               Content="Selected Keyset" 
               Grid.Column="3" 
               Grid.Row="1"
               Grid.ColumnSpan="2" 
               HorizontalAlignment="Center" 
               Margin="10,10,10,10" 
               VerticalAlignment="Center" 
               FontSize="16" 
               Style="{DynamicResource BaseTextTitleStyle}"/>

        <Label x:Name="labelGroup" 
               Content="Select Group" 
               Foreground="{StaticResource LightGrayTextContrast}"
               Grid.Row="1" 
               Grid.Column="0" 
               HorizontalAlignment="Stretch" 
               Margin="{StaticResource MarginResource}"
               VerticalAlignment="Center"/>

        <ComboBox x:Name="groupComboBox" 
                  Grid.Row="1" 
                  Grid.ColumnSpan="1" 
                  Grid.Column="1" 
                  HorizontalAlignment="Stretch" 
                  Margin="{StaticResource MarginResource}"
                  VerticalAlignment="Center" 
                  IsReadOnly="True" 
                  IsEditable="False"
                  DataContext="{Binding groupListViewModel}"
                  ItemsSource="{Binding AllGroups}"
                  SelectedValue="{Binding GroupSelection}"
                  IsSynchronizedWithCurrentItem="True"
                  DisplayMemberPath="GroupName">

        </ComboBox>

        <Button x:Name="buttonGroup" 
                Content="New Group" 
                HorizontalAlignment="Stretch" 
                Margin="{StaticResource MarginResourceButton}"
                VerticalAlignment="Stretch" 
                Grid.Column="2" 
                Grid.Row="1" 
                Grid.ColumnSpan="1" 
                Command="{Binding AddGroupWindow}" 
                Style="{DynamicResource BaseButtonStyle}"/>

        <Label x:Name="labelIndividual" 
               Content="Select Individual" 
               Grid.Row="2" Grid.Column="0" 
               HorizontalAlignment="Stretch" 
               Foreground="{StaticResource LightGrayTextContrast}"
               Margin="{StaticResource MarginResource}"
               VerticalAlignment="Center"/>
        
        <ComboBox x:Name="indivComboBox" 
                  Grid.Row="2" 
                  Grid.ColumnSpan="1" 
                  Grid.Column="1" 
                  HorizontalAlignment="Stretch" 
                  Margin="{StaticResource MarginResource}"
                  VerticalAlignment="Center" 
                  IsReadOnly="True" 
                  IsEditable="False" 
                  DataContext="{Binding individualListViewModel}"
                  ItemsSource="{Binding AllIndividuals}"
                  SelectedValue="{Binding IndividualSelection}"
                  IsSynchronizedWithCurrentItem="True"
                  DisplayMemberPath="IndividualName"/>

        <Button x:Name="buttonIndividual" 
                Content="New Individual" 
                Command="{Binding AddIndividualWindow}" 
                HorizontalAlignment="Stretch" 
                Margin="{StaticResource MarginResourceButton}"
                VerticalAlignment="Stretch" 
                Grid.Column="2" 
                Grid.Row="2" 
                Grid.ColumnSpan="1" 
                Style="{DynamicResource BaseButtonStyle}"/>

        <Label x:Name="labelEvaluation" 
               Content="Select Evaluation" 
               Grid.Row="3" 
               Grid.Column="0" 
               HorizontalAlignment="Stretch" 
               Foreground="{StaticResource LightGrayTextContrast}"
               Margin="{StaticResource MarginResource}"
               VerticalAlignment="Center"/>
        
        <ComboBox x:Name="evaluationComboBox" 
                  Grid.Row="3" 
                  Grid.ColumnSpan="1" 
                  Grid.Column="1" 
                  HorizontalAlignment="Stretch" 
                  Margin="{StaticResource MarginResource}"
                  VerticalAlignment="Center" 
                  IsReadOnly="True" 
                  IsEditable="False"
                  DataContext="{Binding evaluationListViewModel}"
                  ItemsSource="{Binding AllEvaluations}"
                  SelectedValue="{Binding EvaluationSelection}"
                  IsSynchronizedWithCurrentItem="True"
                  DisplayMemberPath="EvaluationName"/>
        
        <Button x:Name="buttonEvaluation" 
                Content="New Evaluation" 
                Command="{Binding AddEvaluationWindow}" 
                HorizontalAlignment="Stretch" 
                Margin="{StaticResource MarginResourceButton}"
                VerticalAlignment="Stretch" 
                Grid.Column="2" 
                Grid.Row="3" 
                Grid.ColumnSpan="1" 
                Style="{DynamicResource BaseButtonStyle}"/>

        <Label x:Name="labelCondition" 
               Content="Select Condition" 
               Grid.Row="4" 
               Grid.Column="0" 
               HorizontalAlignment="Stretch" 
               Foreground="{StaticResource LightGrayTextContrast}"
               Margin="{StaticResource MarginResource}"
               VerticalAlignment="Center"/>
        
        <ComboBox x:Name="conditionComboBox" 
                  Grid.Row="4" 
                  Grid.ColumnSpan="1" 
                  Grid.Column="1" 
                  HorizontalAlignment="Stretch" 
                  Margin="{StaticResource MarginResource}"
                  VerticalAlignment="Center" 
                  IsReadOnly="True" 
                  IsEditable="False" 
                  DataContext="{Binding conditionListViewModel}"
                  ItemsSource="{Binding AllConditions}"
                  SelectedValue="{Binding ConditionSelection}"
                  IsSynchronizedWithCurrentItem="True"
                  DisplayMemberPath="ConditionName"/>
        
        <Button x:Name="buttonCondition" 
                Content="New Condition" 
                Command="{Binding AddConditionWindow}" 
                HorizontalAlignment="Stretch" 
                Margin="{StaticResource MarginResourceButton}"
                VerticalAlignment="Stretch" 
                Grid.Column="2" 
                Grid.Row="4" 
                Grid.ColumnSpan="1" 
                Style="{DynamicResource BaseButtonStyle}"/>

        <Label x:Name="labelKeyset" 
               Content="Select Key Set" 
               Grid.Row="5" 
               Grid.Column="0" 
               HorizontalAlignment="Stretch" 
               Foreground="{StaticResource LightGrayTextContrast}"
               Margin="{StaticResource MarginResource}"
               VerticalAlignment="Center"/>

        <ComboBox x:Name="keysetComboBox" 
                  Grid.Row="5" 
                  Grid.ColumnSpan="1" 
                  Grid.Column="1" 
                  HorizontalAlignment="Stretch" 
                  Margin="{StaticResource MarginResource}"
                  VerticalAlignment="Center" 
                  IsReadOnly="True" 
                  IsEditable="False"
                  DataContext="{Binding keyboardListViewModel}"
                  ItemsSource="{Binding Path=AllKeyboards}"
                  SelectedValue="{Binding keyboardSelection}"
                  IsSynchronizedWithCurrentItem="True"
                  DisplayMemberPath="name"/>

        <Button x:Name="buttonKeyset" 
                Content="Add/Edit Key Set"
                HorizontalAlignment="Stretch" 
                Margin="{StaticResource MarginResourceButton}"
                VerticalAlignment="Stretch"
                Grid.Column="2" 
                Grid.Row="5" 
                Grid.ColumnSpan="1"
                Style="{DynamicResource BaseButtonStyle}"
                Command="{Binding AddKeyboardWindow}" />

        <Label x:Name="labelTherapist" 
               Content="Therapist" 
               Grid.Row="6" 
               Grid.Column="0" 
               Foreground="{StaticResource LightGrayTextContrast}"
               HorizontalAlignment="Stretch" 
               Margin="{StaticResource MarginResource}"
               VerticalAlignment="Center"/>
        
        <ComboBox x:Name="therapistComboBox" 
                  Grid.Row="6" 
                  Grid.ColumnSpan="1" 
                  Grid.Column="1" 
                  HorizontalAlignment="Stretch" 
                  Margin="{StaticResource MarginResource}"
                  VerticalAlignment="Center" 
                  IsReadOnly="True" 
                  IsEditable="False" 
                  DataContext="{Binding therapistListViewModel}"
                  ItemsSource="{Binding AllTherapists}"
                  SelectedValue="{Binding TherapistSelection}"
                  SelectedValuePath="TherapistsName"
                  DisplayMemberPath="TherapistsName"/>
        
        <Button x:Name="buttonTherapist" 
                Content="New Therapist" 
                HorizontalAlignment="Stretch" 
                Margin="{StaticResource MarginResourceButton}"
                VerticalAlignment="Stretch" 
                Grid.Column="2"
                Grid.Row="6" 
                Grid.ColumnSpan="1" 
                Command="{Binding AddTherapistWindow}"
                Style="{DynamicResource BaseButtonStyle}"/>

        <Label x:Name="labelCollector" 
               Content="Data Collector" 
               Grid.Row="7" 
               Grid.Column="0" 
               HorizontalAlignment="Stretch" 
               Foreground="{StaticResource LightGrayTextContrast}"
               Margin="{StaticResource MarginResource}"
               VerticalAlignment="Center"/>

        <ComboBox x:Name="collectorComboBox" 
                  Grid.Row="7" 
                  Grid.ColumnSpan="1" 
                  Grid.Column="1" 
                  HorizontalAlignment="Stretch" 
                  Margin="{StaticResource MarginResource}"
                  VerticalAlignment="Center" 
                  IsReadOnly="True" 
                  IsEditable="False"
                  DataContext="{Binding collectorListViewModel}"
                  ItemsSource="{Binding AllCollectors}"
                  SelectedValue="{Binding CollectorSelection}"
                  IsSynchronizedWithCurrentItem="True"
                  SelectedValuePath="CollectorsName"
                  DisplayMemberPath="CollectorsName"/>

        <Button x:Name="buttonCollector" 
                Content="New Collector"
                HorizontalAlignment="Stretch" 
                Margin="{StaticResource MarginResourceButton}"
                VerticalAlignment="Stretch"
                Grid.Column="2"
                Grid.Row="7" 
                Grid.ColumnSpan="1" 
                Command="{Binding AddCollectorWindow}"
                Style="{DynamicResource BaseButtonStyle}"/>

        <ListView Name="keyFrequency" 
                  Margin="10" 
                  Grid.Row="2" 
                  Grid.Column="3" 
                  Grid.ColumnSpan="2" 
                  Grid.RowSpan="3" 
                  Background="Transparent"
                  HorizontalAlignment="Stretch"
                  
                  Foreground="{DynamicResource LightGrayTextContrast}"
                  ItemsSource="{Binding FrequencyKeys}" 
                  SelectedItem="{Binding SelectedFrequencyString}" >
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Border
                         BorderBrush="Transparent"
                         BorderThickness="0"
                         Background="{TemplateBinding Background}">
                                    <GridViewRowPresenter HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="Auto" Margin="0" Content="{TemplateBinding Content}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.View>
                <GridView ColumnHeaderContainerStyle="{DynamicResource GridViewColumnHeaderStyle}">
                    <GridViewColumn Header="Key (Frequency)"
                                    HeaderContainerStyle="{DynamicResource MyHeaderStyle}"
                                    Width="150" 
                                    DisplayMemberBinding="{Binding KeyName}"/>

                    <GridViewColumn Header="Description (Frequency)" 
                                    HeaderContainerStyle="{DynamicResource MyHeaderStyle}"
                                    Width="150" 
                                    DisplayMemberBinding="{Binding KeyDescription}" />

                </GridView>
            </ListView.View>
        </ListView>

        <ListView Name="keyDuration"
                  Margin="10" 
                  Grid.Row="5" 
                  Grid.Column="3" 
                  Grid.ColumnSpan="2" 
                  Grid.RowSpan="3" 
                  Background="Transparent"
                  Foreground="{DynamicResource LightGrayTextContrast}"
                  ItemsSource="{Binding DurationKeys}" 
                  SelectedItem="{Binding SelectedDurationString}">
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListViewItem}">
                                <Border
                         BorderBrush="Transparent"
                         BorderThickness="0"
                         Background="{TemplateBinding Background}">
                                    <GridViewRowPresenter HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Width="Auto" Margin="0" Content="{TemplateBinding Content}"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.View>
                <GridView ColumnHeaderContainerStyle="{DynamicResource GridViewColumnHeaderStyle}">
                    <GridViewColumn Header="Key (Duration)" 
                                    HeaderContainerStyle="{DynamicResource MyHeaderStyle}"
                                    Width="150" 
                                    DisplayMemberBinding="{Binding KeyName}" />
                    <GridViewColumn Header="Description (Duration)" 
                                    HeaderContainerStyle="{DynamicResource MyHeaderStyle}"
                                    Width="150" 
                                    DisplayMemberBinding="{Binding KeyDescription}" />

                </GridView>
            </ListView.View>
        </ListView>

        <Label x:Name="labelReliability" 
               Content="Collector Role" 
               Grid.Row="8" 
               Grid.Column="0" 
               HorizontalAlignment="Stretch" 
               Foreground="{StaticResource LightGrayTextContrast}"
               Margin="{StaticResource MarginResource}"
               VerticalAlignment="Center"/>

        <ComboBox x:Name="collectorRole" 
                  Grid.Row="8" 
                  Grid.ColumnSpan="1" 
                  Grid.Column="1" 
                  HorizontalAlignment="Stretch" 
                  Margin="{StaticResource MarginResource}"
                  VerticalAlignment="Center" 
                  IsReadOnly="True" 
                  SelectedValuePath="Content"
                  SelectedValue="{Binding SelectedDataRole}"
                  IsEditable="False"
                  IsSynchronizedWithCurrentItem="True">
            <ComboBoxItem>Primary</ComboBoxItem>
            <ComboBoxItem>Reliability</ComboBoxItem>
            
        </ComboBox>

        <Label x:Name="labelDuration" 
               Content="Session Duration" 
               Grid.Row="9" 
               Grid.Column="0" 
               HorizontalAlignment="Stretch" 
               Foreground="{StaticResource LightGrayTextContrast}"
               Margin="{StaticResource MarginResource}"
               VerticalAlignment="Center"/>

        <ComboBox x:Name="sessionDuration" 
                  Grid.Row="9" 
                  Grid.ColumnSpan="1" 
                  Grid.Column="1" 
                  HorizontalAlignment="Stretch" 
                  Margin="{StaticResource MarginResource}"
                  VerticalAlignment="Center" 
                  IsReadOnly="True" 
                  SelectedValuePath="Content"
                  SelectedValue="{Binding SelectedTime}"
                  IsEditable="False">
            <ComboBoxItem>1 Minute</ComboBoxItem>
            <ComboBoxItem>5 Minutes</ComboBoxItem>
            <ComboBoxItem>10 Minutes</ComboBoxItem>
            <ComboBoxItem>15 Minutes</ComboBoxItem>
            <ComboBoxItem>20 Minutes</ComboBoxItem>
            <ComboBoxItem>25 Minutes</ComboBoxItem>
            <ComboBoxItem>30 Minutes</ComboBoxItem>
            <ComboBoxItem>60 Minutes</ComboBoxItem>
        </ComboBox>

        <Label x:Name="labelSessionNumber" 
               Content="Session Number" 
               Grid.Row="10" 
               Grid.Column="0" 
               HorizontalAlignment="Stretch" 
               Foreground="{DynamicResource LightGrayTextContrast}"
               Margin="{DynamicResource MarginResource}"
               VerticalAlignment="Center"/>

        <TextBox x:Name="textBoxSession"
                 Grid.Row="10"
                 Grid.Column="1"
                 HorizontalAlignment="Stretch"
                 Margin="10,15,10,15"
                 HorizontalContentAlignment="Left"
                 VerticalContentAlignment="Center">
            <TextBox.Text>
                <Binding Path="SessionNumber">
                    <Binding.ValidationRules>
                        <ExceptionValidationRule/>
                        <local:SessionValidation/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
            
        </TextBox>

        <DockPanel 
            Grid.Row="8"
            Grid.RowSpan="3"
            Grid.Column="2"
            Background="Transparent"
            Grid.ColumnSpan="3"
            Margin="10,10,10,10">
            <Border CornerRadius="1"
                BorderBrush="{DynamicResource LightGrayTextContrast}"
                BorderThickness="1"
                Padding="10">
                <Grid>
                    <Grid.RowDefinitions >
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Label
                        Grid.Row="0"
                        Grid.Column="0"
                        Grid.ColumnSpan="3"
                        Foreground="{DynamicResource LightGrayTextContrast}"
                        Content="Directions for Use"
                        HorizontalContentAlignment="Center"/>

                    <Label
                        Grid.Row="1"
                        Grid.Column="0"
                        Foreground="{DynamicResource LightGrayTextContrast}"
                        Grid.ColumnSpan="3"
                        Content="Step 1: Select the group and individual being observed."/>

                    <Label
                        Grid.Row="2"
                        Grid.Column="0"
                        Grid.ColumnSpan="3"
                        Foreground="{DynamicResource LightGrayTextContrast}"
                        Content="Step 2: Select the specific treatment and conditions being measured."/>

                    <Label
                        Grid.Row="3"
                        Grid.Column="0"
                        Grid.ColumnSpan="3"
                        Foreground="{DynamicResource LightGrayTextContrast}"
                        Content="Step 3: Indicate the therapist(s) and current data collector(s) for this session."/>

                    <Label
                        Grid.Row="4"
                        Grid.Column="0"
                        Foreground="{DynamicResource LightGrayTextContrast}"
                        Grid.ColumnSpan="3"
                        Content="Step 4: Set the session duration/session number and press the Start Session button."/>
                </Grid>
            </Border>
        </DockPanel>
        
        <Button x:Name="buttonClose" 
                Content="Back" 
                HorizontalAlignment="Stretch" 
                Margin="{StaticResource MarginResourceButton}"
                VerticalAlignment="Stretch" 
                Grid.Column="0"
                Grid.Row="11" 
                Grid.ColumnSpan="2" 
                Style="{DynamicResource BaseButtonStyle}" 
                Command="{Binding CloseSetupWindow}"/>
        
        <Button x:Name="buttonStart" 
                Content="Start Session" 
                HorizontalAlignment="Stretch" 
                Margin="{StaticResource MarginResourceButton}"
                VerticalAlignment="Stretch" 
                Grid.Column="3" 
                Grid.Row="11" 
                Grid.ColumnSpan="2" 
                Style="{DynamicResource BaseButtonStyle}" 
                Command="{Binding SetupWindowFired}"/>
    </Grid>
</Window>
