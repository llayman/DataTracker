<!--
    Copyright 2016 Shawn Gilroy

    This file is part of DataTracker.

    Discounting Model Selector is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, version 3.

    DataTracker is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with DataTracker.  If not, see <http://www.gnu.org/licenses/gpl-3.0.html>.
-->

<Window x:Class="DataTracker.View.ResultsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:DataTracker.View"
        mc:Ignorable="d"
        Title="ResultsWindow" 
        Height="700" 
        Width="800"
        Style="{DynamicResource BackgroundStyle}"
        Loaded="Window_Loaded">

    <Window.Resources>
        <Style TargetType="{x:Type GridViewColumnHeader}" x:Key="MyHeaderStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                        <Border BorderThickness="0,0,0,1" BorderBrush="Transparent" Background="Transparent">
                            <TextBlock x:Name="ContentHeader" Text="{TemplateBinding Content}" Padding="5,5,5,0" Width="{TemplateBinding Width}" TextAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Width" Value="Auto" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource LightGrayTextContrast}" />
        </Style>

        <Style x:Key="GridViewColumnHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template" Value="{DynamicResource GridViewColumnHeaderControlTemplate1}"/>
        </Style>

        <ControlTemplate x:Key="GridViewColumnHeaderControlTemplate1" TargetType="{x:Type GridViewColumnHeader}">
            <Grid SnapsToDevicePixels="True">
                <Border x:Name="HeaderBorder" BorderBrush="Transparent" BorderThickness="0,1" Background="{TemplateBinding Background}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="7"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Rectangle x:Name="UpperHighlight" Fill="#FFE3F7FF" Visibility="Collapsed"/>
                        <Border Padding="{TemplateBinding Padding}" Grid.RowSpan="2">
                            <ContentPresenter x:Name="HeaderContent" 
                                              ContentTemplate="{TemplateBinding ContentTemplate}" 
                                              Content="{TemplateBinding Content}" 
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="0,0,0,0" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </Grid>
                </Border>
                <Border x:Name="HeaderHoverBorder" BorderThickness="0,0,0,0" Margin="0,0,0,0"/>
                <Border x:Name="HeaderPressBorder" BorderThickness="0,0,0,0" Margin="0,0,0,0"/>
                <Canvas>
                    <Thumb x:Name="PART_HeaderGripper">
                        <Thumb.Style>
                            <Style TargetType="{x:Type Thumb}">
                                <Setter Property="Canvas.Right" Value="-9"/>
                                <Setter Property="Width" Value="18"/>
                                <Setter Property="Height" Value="{Binding ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"/>
                                <Setter Property="Padding" Value="0"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                            <Border Background="Transparent">
                                                <Rectangle Fill="Transparent" HorizontalAlignment="Center" Width="0"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Thumb.Style>
                    </Thumb>
                </Canvas>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="HeaderBorder" Value="Transparent"/>
                    <Setter Property="BorderBrush" TargetName="HeaderHoverBorder" Value="#FF88CBEB"/>
                    <Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
                    <Setter Property="Background" TargetName="PART_HeaderGripper" Value="Transparent"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="HeaderBorder" Value="Transparent"/>
                    <Setter Property="BorderBrush" TargetName="HeaderHoverBorder" Value="Transparent"/>
                    <Setter Property="BorderBrush" TargetName="HeaderPressBorder" Value="Transparent"/>
                    <Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
                    <Setter Property="Fill" TargetName="UpperHighlight" Value="Transparent"/>
                    <Setter Property="Visibility" TargetName="PART_HeaderGripper" Value="Hidden"/>
                    <Setter Property="Margin" TargetName="HeaderContent" Value="0,0,0,0"/>
                </Trigger>
                <Trigger Property="Height" Value="Auto">
                    <Setter Property="MinHeight" Value="20"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="Transparent"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions >
            <RowDefinition Height="80"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Label Name="Title"                
            Grid.Row="0"
            Grid.Column="0" 
            Grid.ColumnSpan="6"
            Content="Results of Recording Session" 
            HorizontalAlignment="Center" 
            VerticalAlignment="Center" 
            VerticalContentAlignment="Center"
            FontSize="20"
            Style="{DynamicResource BaseTextTitleStyle}"
            Background="Transparent"/>

        <DataGrid
            Name="topDataGrid"
            SelectionUnit="Cell"
            Grid.Row="1"
            Grid.RowSpan="2"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            VerticalAlignment="Top"
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Stretch"
            ColumnWidth="*"
            AutoGenerateColumns="True" 
            CanUserReorderColumns="False"
            Background="Transparent"
            RowBackground="Transparent"
            AlternatingRowBackground="Transparent"
            IsReadOnly="True"
            CanUserSortColumns="False"
            Margin="20,0,20,0"
            ItemsSource="{Binding}" 
            LostFocus="topDataGrid_LostFocus">
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="BorderBrush" Value="Transparent"/>
                </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="White" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
        </DataGrid>

        <DataGrid
            Name="topDataGridDuration"
            SelectionUnit="Cell"
            Grid.Row="1"
            Grid.RowSpan="2"
            Grid.Column="2"
            Grid.ColumnSpan="2"
            VerticalAlignment="Top"
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Stretch"
            ColumnWidth="*"
            AutoGenerateColumns="True" 
            CanUserReorderColumns="False"
            Background="Transparent"
            RowBackground="Transparent"
            AlternatingRowBackground="Transparent"
            IsReadOnly="True"
            CanUserSortColumns="False"
            Margin="20,0,20,0"
            ItemsSource="{Binding}" 
            LostFocus="topDataGrid_LostFocus">
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="BorderBrush" Value="Transparent"/>
                </Style>
            </DataGrid.ColumnHeaderStyle>
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="White" />
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="White" />
                            <Setter Property="Foreground" Value="Black" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
        </DataGrid>

        <Label Content="Schedule #1 Alone (Green)"
               Grid.Row="3"
               Grid.Column="0"
               Grid.ColumnSpan="4"
               HorizontalAlignment="Stretch"
               HorizontalContentAlignment="Center"
               Foreground="Green"
               VerticalAlignment="Bottom"/>

        <DataGrid
            Name="dataGridSchedOne"
            Grid.Row="4"
            Grid.RowSpan="2"
            SelectionUnit="Cell"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Background="Transparent"
            RowBackground="Transparent"
            AlternatingRowBackground="Transparent"
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Stretch"
            ColumnWidth="*"
            AutoGenerateColumns="True" 
            CanUserReorderColumns="False"
            Margin="20,0,20,0"
            IsReadOnly="True"
            Foreground="Green"
            CanUserSortColumns="False"
            ItemsSource="{Binding}">
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Setter Property="Background" Value="Transparent"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Green" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="BorderBrush" Value="Green"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="Background" Value="Transparent"/>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="Transparent" />
                </Style>
            </DataGrid.ColumnHeaderStyle>
        </DataGrid>

        <DataGrid
            Name="dataGridSchedOneDuration"
            Grid.Row="4"
            Grid.RowSpan="2"
            SelectionUnit="Cell"
            Grid.Column="2"
            Grid.ColumnSpan="2"
            Background="Transparent"
            RowBackground="Transparent"
            AlternatingRowBackground="Transparent"
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Stretch"
            ColumnWidth="*"
            AutoGenerateColumns="True" 
            CanUserReorderColumns="False"
            Margin="20,0,20,0"
            IsReadOnly="True"
            Foreground="Green"
            CanUserSortColumns="False"
            ItemsSource="{Binding}">
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Setter Property="Background" Value="Transparent"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Green" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="BorderBrush" Value="Green"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="Background" Value="Transparent"/>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="Transparent" />
                </Style>
            </DataGrid.ColumnHeaderStyle>
        </DataGrid>        

        <Label Content="Schedule #2 Alone (Yellow)"
               Grid.Row="6"
               Grid.Column="0"
               Grid.ColumnSpan="4"
               HorizontalAlignment="Stretch"
               HorizontalContentAlignment="Center"
               Foreground="Orange"
               VerticalAlignment="Bottom"/>

        <DataGrid
            Name="dataGridSchedTwo"
            Grid.Row="7"
            Grid.RowSpan="2"
            SelectionUnit="Cell"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Stretch"
            ColumnWidth="*"
            AutoGenerateColumns="True" 
            Background="Transparent"
            RowBackground="Transparent"
            AlternatingRowBackground="Transparent"
            CanUserReorderColumns="False"
            IsReadOnly="True"
            Foreground="Orange"
            CanUserSortColumns="False"
            Margin="20,0,20,0"
            ItemsSource="{Binding}">
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Orange" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="BorderBrush" Value="Orange"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="Transparent" />
                </Style>
            </DataGrid.ColumnHeaderStyle>
        </DataGrid>

        <DataGrid
            Name="dataGridSchedTwoDuration"
            Grid.Row="7"
            Grid.RowSpan="2"
            SelectionUnit="Cell"
            Grid.Column="2"
            Grid.ColumnSpan="2"
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Stretch"
            ColumnWidth="*"
            AutoGenerateColumns="True" 
            Background="Transparent"
            RowBackground="Transparent"
            AlternatingRowBackground="Transparent"
            CanUserReorderColumns="False"
            Margin="20,0,20,0"
            IsReadOnly="True"
            Foreground="Orange"
            CanUserSortColumns="False"
            ItemsSource="{Binding}">
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Orange" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="BorderBrush" Value="Orange"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="Transparent" />
                </Style>
            </DataGrid.ColumnHeaderStyle>
        </DataGrid>

        <Label Content="Schedule #3 Alone (Red)"
               Grid.Row="9"
               Grid.Column="0"
               Grid.ColumnSpan="4"
               HorizontalAlignment="Stretch"
               HorizontalContentAlignment="Center"
               Foreground="Red"
               VerticalAlignment="Bottom"/>

        <DataGrid
            Name="dataGridSchedThree"
            Grid.Row="10"
            Grid.RowSpan="2"
            SelectionUnit="Cell"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Stretch"
            ColumnWidth="*"
            AutoGenerateColumns="True" 
            Background="Transparent"
            RowBackground="Transparent"
            AlternatingRowBackground="Transparent"
            CanUserReorderColumns="False"
            Margin="20,0,20,0"
            IsReadOnly="True"
            Foreground="Red"
            CanUserSortColumns="False"
            ItemsSource="{Binding}">
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Red" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="BorderBrush" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="Transparent" />
                </Style>
            </DataGrid.ColumnHeaderStyle>
        </DataGrid>

        <DataGrid
            Name="dataGridSchedThreeDuration"
            Grid.Row="10"
            Grid.RowSpan="2"
            SelectionUnit="Cell"
            Grid.Column="2"
            Grid.ColumnSpan="2"
            HorizontalAlignment="Stretch"
            HorizontalContentAlignment="Stretch"
            ColumnWidth="*"
            AutoGenerateColumns="True" 
            Background="Transparent"
            RowBackground="Transparent"
            AlternatingRowBackground="Transparent"
            CanUserReorderColumns="False"
            Margin="20,0,20,0"
            IsReadOnly="True"
            Foreground="Red"
            CanUserSortColumns="False"
            ItemsSource="{Binding}">
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Red" />
                            <Setter Property="Foreground" Value="White" />
                            <Setter Property="BorderBrush" Value="Red"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.ColumnHeaderStyle>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="Transparent" />
                </Style>
            </DataGrid.ColumnHeaderStyle>
        </DataGrid>

        <Button
            Name="saveButton"
            Grid.Row="12"
            Grid.Column="0"
            Grid.ColumnSpan="2"                
            HorizontalAlignment="Stretch"
            Margin="20,10,20,10"
            MaxHeight="120"
            Style="{DynamicResource BaseButtonStyle}"
            Content="Save Data"
            Click="saveButton_Click"/>

        <Button
            Name="discardButton"
            Grid.Row="12"
            Grid.Column="2"
            Grid.ColumnSpan="2"                
            HorizontalAlignment="Stretch"
            Margin="20,10,20,10"
            MaxHeight="120"
            Style="{DynamicResource BaseButtonStyle}"
            Content="Discard Data"
            Click="discardButton_Click"/>

    </Grid>
</Window>
